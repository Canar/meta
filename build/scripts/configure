#!/bin/bash
# vim: ts=3 sw=3 fdm=marker foldlevel=0 :
: common # {{{1
	parse-conf(){ # {{{2
		while read l ; do 
			eval echo "$l"
		done | sed -z 's/[ \t\n]\+/ /g'
		echo -n ' '
	}
	conf-build-i686(){ # {{{2
		parse-conf <<-'EOF'
			--build=$_a_b
			BUILD_CC=gcc
			CC=gcc\\\\ -m32
			CXX=g++\\\\ -m32
		EOF
	}
	conf-build-x32(){ # {{{2
		parse-conf <<-'EOF'
			--build=$_a_b
			BUILD_CC=gcc
			CC=gcc\\\\ -mx32
			CXX=g++\\\\ -mx32
		EOF
	}
	conf-gnu-toolchain(){ # {{{2
		parse-conf <<-'EOF'
			--with-glibc-version=2.25 
			--disable-nls
			--disable-werror
		EOF
		# --enable-default-pie
	}
	conf-gnu-toolchain-features(){ # {{{2
		parse-conf <<-'EOF'
			--enable-linker-build-id
			--enable-clocale=gnu
			--enable-gnu-unique-object
			--enable-multibyte 
			--enable-plugins
		EOF
		# --enable-default-pie
	}
	conf-gnu-toolchain-zlib(){ # {{{2
		parse-conf <<-'EOF'
			--with-target-system-zlib 
			--with-system-zlib 
		EOF
	}
	conf-gnu-toolchain-stdpath(){ # {{{2
		parse-conf <<-'EOF'
			--prefix=$_p
			--with-sysroot=/
			--with-local-prefix=$_p/sub
			--with-lib-path=$_p/lib
			--with-native-system-header-dir=$_p/include
			LIB_PATH=$_p/lib
		EOF
	}
	conf-gnu-toolchain-multi(){ # {{{2
		parse-conf <<-'EOF'
			--with-arch=native
			--with-arch-32=native
			--with-arch-64=native
			--enable-multiarch
			--enable-multilib
			--with-abi=m64
			--with-multilib-list=m32,m64,mx32
			--enable-checking=release
			--enable-lto 
		EOF
	}
	conf-gnu-toolchain-x32(){ # {{{2
		parse-conf <<-'EOF'
			--prefix=$_px
			--with-sysroot=/
			--with-local-prefix=$_p
			--with-lib-path=$_px/lib:$_pl
			--with-native-system-header-dir=$_px/include

			LIB_PATH=$_px/lib:$_pl
			--target=$_a_bx
			--host=$_a_b
		EOF
	}
	conf-gnu-toolchain-i686(){ # {{{2
		parse-conf <<-'EOF'
			--prefix=$_pi
			--with-sysroot=/
			--with-local-prefix=$_p
			--with-lib-path=$_pi/lib:$_pl
			--with-native-system-header-dir=$_pi/include
			LIB_PATH=$_pi/lib:$_pl
			--target=$_a_bi
			--host=$_a_b
		EOF
	}
	conf-gnu-toolchain-manypy(){ # {{{2
		parse-conf <<-'EOF'
			--prefix=$_p
			--with-sysroot=/
		EOF
	}
	conf-cross-compile(){ # {{{2
		parse-conf <<-'EOF'
			--build=$1
			--host=$2
			--target=$3
		EOF
	}
: binutils # {{{1
	conf-binutils-first(){ # {{{2
		conf-binutils-mine-static
		return 0
		parse-conf <<-'EOF'
			--prefix=$_p
			--with-sysroot=/
			--with-local-prefix=$_p/sub
			--with-lib-path=$_p/lib
			--with-native-system-header-dir=$_p/include
			LIB_PATH=$_p/lib

			--with-glibc-version=2.25 
			
			--disable-nls
			--disable-werror
			--disable-gdb
			--disable-shared
			--disable-gold
			--disable-libdecnumber
			--disable-readline
			--disable-sim
			--disable-profile
			--disable-threads
			--disable-lto
			--disable-multilib
			--disable-multiarch
			
			#			--enable-static
						--with-arch=skylake
			#			--enable-targets=i686-pc-linux-gnu,x86_64-pc-linux-gnu,x86_64-pc-linux-gnux32
			#			--enable-default-pie
			#			--enable-multibyte 

			#			--enable-linker-build-id
			#			--enable-clocale=gnu
			#			--enable-gnu-unique-object
		EOF
	}
	conf-binutils-i686(){ # {{{2
		conf-binutils-mine-i686
	}
	conf-binutils-x32(){ # {{{2
		conf-binutils-mine-x32
	}
	conf-binutils-mine-static(){ # {{{2
		conf-gnu-toolchain
		conf-gnu-toolchain-features
		conf-gnu-toolchain-multi
		conf-gnu-toolchain-stdpath
		parse-conf <<-'EOF'
			--disable-shared
			--enable-targets=all
			--enable-gold
			--disable-gdb
			--enable-install-libiberty
			--enable-install-libbfd
		EOF
	}
	conf-binutils-mine-unarch(){ # architecture independent stuff {{{2
		parse-conf <<-'EOF'
			--enable-targets=all
			--enable-gold
			--disable-gdb
		EOF
	}
	conf-binutils-mine-unarch-multi(){ # {{{2 #architecture independent stuff
		conf-binutils-mine-unarch
		parse-conf <<-'EOF'
			--enable-install-libiberty
			--enable-install-libbfd
		EOF
	}
	conf-binutils-mine(){ # {{{2
		conf-gnu-toolchain
		conf-gnu-toolchain-zlib
		conf-gnu-toolchain-multi
		conf-gnu-toolchain-features
		conf-gnu-toolchain-stdpath
		conf-binutils-mine-unarch
		conf-binutils-mine-unarch-multi
	}
	conf-binutils-mine-i686(){ # {{{2
		conf-gnu-toolchain
		conf-gnu-toolchain-features
		conf-gnu-toolchain-multi
		conf-gnu-toolchain-i686
		conf-build-i686
		conf-binutils-mine-unarch
	}
	conf-binutils-mine-x32(){ # {{{2
		conf-gnu-toolchain
		conf-gnu-toolchain-features
		conf-gnu-toolchain-multi
		conf-gnu-toolchain-x32
		# conf-build-x32
		conf-binutils-mine-unarch
	}
	conf-binutils-manypy(){ # {{{2
		conf-gnu-toolchain-manypy
		parse-conf <<-'EOF'
			--disable-gdb
			--disable-libdecnumber
			--disable-readline
			--disable-sim
		EOF
	}
	conf-binutils-multi(){ # {{{2
		conf-gnu-toolchain
		conf-gnu-toolchain-features
		conf-gnu-toolchain-multi
		conf-gnu-toolchain-zlib
		conf-binutils-mine-unarch
		conf-gnu-toolchain-stdpath
		conf-binutils-mine
	}
	conf-binutils(){ # {{{2
		conf-binutils-mine
	}
: gcc # {{{1
	conf-gcc-mine(){ # {{{2
		conf-gnu-toolchain
		conf-gnu-toolchain-zlib
		conf-gnu-toolchain-stdpath
		conf-gnu-toolchain-features
		conf-gnu-toolchain-multi
		parse-conf <<-'EOF'
			--enable-languages=c,c++ 
			--disable-bootstrap 
			--disable-vtable-verify 
		EOF
	}
	conf-gcc-i686(){ # {{{2
		conf-gcc-mine-i686
	}
	conf-gcc-mine-i686(){ # {{{2
		conf-gnu-toolchain
		conf-gnu-toolchain-zlib
		conf-gnu-toolchain-stdpath
		conf-gnu-toolchain-features
		conf-gnu-toolchain-multi
		parse-conf <<-'EOF'
			--enable-languages=c,c++ 
			--disable-bootstrap 
			--disable-vtable-verify 
		EOF
	}
	conf-gcc-mine-static(){ # {{{2
		conf-gnu-toolchain
		conf-gnu-toolchain-multi
		parse-conf <<-'EOF'
			--disable-shared
			--enable-languages=c,c++ 
			--disable-bootstrap 
			--disable-vtable-verify 
		EOF
	}
	conf-gcc-manypy-common(){ # {{{2
		parse-conf <<-'EOF'
			--disable-libsanitizer
			--disable-libssp
			--with-glibc-version=2.25
		EOF
	}
	conf-gcc-manypy(){ # {{{2
		conf-gnu-toolchain-manypy
		conf-gcc-manypy-common
		parse-conf <<-'EOF'
			--enable-languages=c,c++
			--enable-shared
			--enable-threads
		EOF
	}
	conf-gcc-first(){ # {{{2
		parse-conf <<-'EOF'
			--prefix=$_p
			--with-sysroot=/
			--with-local-prefix=$_p/sub
			--with-lib-path=$_p/lib
			--with-native-system-header-dir=$_p/include
			LIB_PATH=$_p/lib
			LD_LIBRARY_PATH=$_p/lib
#			LDFLAGS="-L$_p/lib"
#			CFLAGS="-L$_p/lib"
#			CXXFLAGS="-L$_p/lib"

			--with-{gmp,mpfr,mpc,isl}=$_p

			--with-glibc-version=2.25
			--enable-languages=c

			--enable-linker-build-id
			--enable-clocale=gnu
			--enable-gnu-unique-object
#			--enable-default-pie
#			--enable-multibyte 
#			--enable-static

			--disable-shared
			--disable-lto
 			--disable-bootstrap
			--disable-decimal-float
			--disable-multilib
			--disable-multiarch
			--disable-nls
			--disable-threads
			--disable-libatomic
			--disable-libffi
			--disable-libgomp
			--disable-libitm
			--disable-libmpx
			--disable-libquadmath
			--disable-libsanitizer
			--disable-libssp
			--disable-profile
			--disable-vtable-verify 
			--disable-werror
			--with-arch=native
			--without-headers
			--with-newlib
		EOF
	}
	conf-gcc-strap-manypy(){ # {{{2
		conf-gnu-toolchain-manypy
		conf-gcc-manypy-common
		parse-conf <<-'EOF'
			--enable-languages=c
			--disable-shared
			--disable-threads
			--disable-libatomic
			--disable-decimal-float
			--disable-libffi
			--disable-libgomp
			--disable-libitm
			--disable-libmpx
			--disable-libquadmath
			--without-headers
			--with-newlib
		EOF
	}
	conf-gcc(){ # {{{2
		conf-gcc-mine
		parse-conf <<-'EOF'
			--disable-multilib
		EOF
	}
	conf-gcc-multi(){ # {{{2
		conf-gcc-mine
		conf-gnu-toolchain-multi
	}
: glibc # {{{1
	conf-glibc-mine-base(){ # {{{2
		parse-conf <<-'EOF'
			--enable-kernel=4.2.0 
			--with-headers=$_p/include 
			--prefix=$_p
			--with-sysroot=/ 
			--enable-shared 
			--disable-profile 
			--enable-kernel=4.2.0 
			--with-arch=native
		EOF
	}
	conf-glibc-first-x32(){ # {{{2
		conf-glibc-first
		parse-conf <<-'EOF'
			--build=x86_64-pc-linux-gnu
			--host=x86_64-pc-linux-gnux32
		EOF
	}
	conf-glibc-first-i686(){ # {{{2
		conf-glibc-first
		parse-conf <<-'EOF'
			--build=x86_64-pc-linux-gnu
			--host=i686-pc-linux-gnu
		EOF
	}
	conf-glibc-first(){ # {{{2
		conf-glibc-mine-base
		parse-conf <<-'EOF'
			--disable-add-ons
			--disable-multilib 
			--disable-multi-arch 
		EOF
	}
	conf-glibc-mine(){ # {{{2
		conf-glibc-mine-base
		parse-conf <<-'EOF'
			--enable-add-ons
			--enable-multilib 
			--enable-multi-arch 
		EOF
	}
	conf-glibc-manypy(){ # {{{2
		parse-conf <<-'EOF'
			--prefix=$_p
			--enable-add-ons
			--enable-profile
			--build=%s
			--host=%s
			CC=%s
			CXX=%s
			AR=%s
			AS=%s
			LD=%s
			NM=%s
			OBJCOPY=%s
			OBJDUMP=%s
			RANLIB=%s
			READELF=%s
			STRIP=%s
		EOF
	}
	conf-glibc(){ # {{{2
		conf-glibc-mine
	}
: aux libraries # {{{1
	conf-gmp-first(){ # {{{2
		parse-conf <<-'EOF'
			--prefix=$_p
		EOF
	}
	conf-gmp(){ # {{{2
		parse-conf <<-'EOF'
			--prefix=$_p
			--enable-cxx
		EOF
	}
	conf-mpfr-first(){ # {{{2
		parse-conf <<-'EOF'
			--{prefix,with-gmp}=$_p
			--disable-decimal-float
			--disable-float128
			--with-gnu-ld
		EOF
	}
	conf-mpfr(){ # {{{2
		parse-conf <<-'EOF'
			--{prefix,with-gmp}=$_p
			--enable-float128
			--with-gnu-ld
		EOF
	}
	conf-mpc-first(){ # {{{2
		conf-mpc ;
	}
	conf-mpc(){ # {{{2
		parse-conf <<-'EOF'
			--{prefix,with-{mpfr,gmp}}=$_p
			--with-gnu-ld 
		EOF
	}
	conf-isl(){ # {{{2
		parse-conf <<-'EOF'
			--{prefix,with-{mpfr,gmp,mpc}}=$_p
			--with-gnu-ld 
		EOF
	}
	conf-zlib-first(){ # {{{2
			conf-zlib 
	}
	conf-zlib(){ # {{{2
		parse-conf <<-'EOF'
			--prefix=$_p
			--{,shared}libdir=$_p/lib
			--includedir=$_p/include
			--shared
		EOF
	}
	conf-zlib-i686(){ # {{{2
		parse-conf <<-'EOF'
			--prefix=$_p
			--{,shared}libdir=$_p/lib
			--includedir=$_p/include
			--shared
		EOF
	}
: trash # {{{1
	conf-root(){ # {{{2
		parse-conf <<-'EOF'
			--enable-multiarch 
			--enable-languages=c 
			--enable-c++ 
			--enable-shared 
			--enable-plugin 
			--enable-plugins 
			--disable-nls 
			--disable-multilib 
			--disable-bootstrap 
			--disable-gdb 
			--disable-libsanitizer 
			--disable-gold 
			--disable-libstdcxx 
			--without-gdb 
			--prefix=/usr/local/opt 
			--with-local-prefix=/usr/local/opt/sub 
			--with-sysroot=/ 
			--with-native-system-header-dir=/include
		EOF
	}

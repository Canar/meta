#!/bin/bash
# vim: ts=3 sw=3 fdm=indent:
: utility - impl-update,fence,fix
	timens(){
		cat /proc/timer_list  | grep now | cut -d\  -f3
	}
	impl-update(){
		grep '^[ '$'\t'']*[a-z]\+-impl(' $_r/scripts/main |\
			sed 's/^[ \t]*\([a-z]\+\)-impl(.*$/\1(){ fence \&\& \1-impl "$@" ; } /g' > $_r/scripts/impl
	}
	fence(){
		bf=""
		d="$(pwd)" # current source dirname
		b=""
		d="${d##$_r/}"
		b="$d"
		dd="${d%%-first}"
		case "$dd" in
			libc* ) b=glibc ;;
			binutils* ) b=binutils-gdb ;;
			gcc* ) b=gcc ;;
			* ) b="$dd"
		esac

	#	bf=""
	#	if [ -f "$_r/configures/$b" ] ; then
	#		bf="$_r/configures/$b"
	#	fi
	#	[ -z "$bf" ] && echo not a good dir && return 1
		return 0
	}
	fix(){
		f=scripts/main 
		case "$1" in
			e* ) f=env ;;
			c* ) f=scripts/configure ;;
		esac
		vi $_r/$f
		impl-update
		. $_r/env
	}
	newlog(){
		date +%s > $_r/scripts/log/latestlogtime
	}
	log(){
		if [ -n "." ] ; then
			otim="$( timens )"
			dtim=300000000
			sectim=1000000000 # 1 second
			dstim="$(( $dtim / $sectim )).$(( $dtim % $sectim))"
			ctim=0
			local t=""
			local lf="$_r/scripts/log/$( cat $_r/scripts/log/latestlogtime )"
			echo -n "$1..."
			#"${@:2}" |& stdbuf -i0 -o0 sed -zu 's/[ 	]\+\\\n[ 	]\+/ /g' | while read -r l ; do
			"${@:2}" |& while read -t "$dstim" -r l || test $? -gt 128 ; do
				tim="$( timens )"
				if [ -n "$l" ] ; then
					echo "$l" >>$lf
					unset l
				else
					echo -n .
					otim=$tim
					ctim=0
				fi
				if [[ $ctim -gt 256 ]] ; then
					ch="#"
				elif [[ $ctim -gt 128 ]] ; then
					ch="@"
				elif [[ $ctim -gt 64 ]] ; then
					ch="$"
				elif [[ $ctim -gt 32 ]] ; then
					ch="%"
				elif [[ $ctim -gt 16 ]] ; then
					ch="!"
				elif [[ $ctim -gt 8 ]] ; then
					ch="*"
				elif [[ $ctim -gt 4 ]] ; then
					ch="+"
				elif [[ $ctim -gt 2 ]] ; then
					ch="-"
				else
					ch="."
				fi
				echo -ne '\b'"$ch"
				if [ $(( $tim - $otim )) -gt $dtim ] ; then
					echo -n .
					otim=$tim
					ctim=0
				else
					let ctim="$ctim+1"
				fi
			done
		else
			"${@:2}"
			#"${@:2}" |&  sed -zu 's/[ 	]\+\\\n[ 	]\+/ /g' 
		fi
	}
	logmsg(){
		echo "$@"
		echo "$@" >>$_r/scripts/log/$t
	}
: configuration - ccat,conf,reconf,confhelp
	conf-impl(){
		if declare -fF conf-$d >/dev/null ; then
			rt="$_s/$b/configure $( conf-$d )"
			echo "$( date ): $rt" >>$_r/scripts/log/configure.log
			$rt
		else
			cp "$bf" "../configures/log/$b.$( date +%s )"
			"$bf"
		fi
	}
	reconf-impl(){
		vi "$bf"
		conf
	}
	confhelpa-impl(){
		$_s/$d/configure --help=recursive |& less
	}
	confhelp-impl(){
		$_s/$d/configure --help |& less
	}
: make - go,inst,kernelh
	go-impl(){
		tgtr=all
#		case "$d" in
#			gcc-first ) tgtr=all-gcc ;;
#			gcc* ) tgtr=all-gcc ;;
#		esac

		make $_m_fl $tgtr "$@"
	}
	inst-impl(){
		instvar="DESTDIR"
		instcmd="install"
		case "$d" in
			glibc* | libc* ) instvar="install_root" ;;
#			gcc* ) instcmd="install-gcc" ;;
		esac
		destd="$_r/dest/$d"
		mkdir "$destd"
		make $_m_fl -C $_r/$d $_m_fl $instvar="$destd" $instcmd "$@" &&
		pesr $destd	|| return 1

	}
	place-impl(){
		rsync -Pav "$_r/dest/$d/$_p/" "$_p" || return $?
	}
	kernelh-impl(){
		git -C $_s/linux checkout current_stable	
		make $_m_fl -C $_s/linux INSTALL_HDR_PATH=$_p ARCH=$_a_bl headers_install
	}
: misc - ldcheck,ldfix,redo,buildall
	redo-impl(){ 
		[ -z "$1" ] && return
		if [ -d "$_r/$1" ] ; then
			cd $_r &&
			chmod -R u+rw $_r/$d &&
			rm -r $_r/$1
		fi
		mkdir $_r/$1 &&
		cd $_r/$1 &&
		fence &&
		conf-impl &&
		go-impl &&
		inst-impl
	}
	alter-impl(){
		redo-impl "$@" &&
		place-impl
	}
	pesr(){
		[ -n "$1" ] && d="$1" || d="."
		[ -n "$2" ] && ld="$2" || ld="$_p/lib"
		find "$d" -type f -exec bash -c 'patchelf --set-rpath'"$ld"' "{}" >& /dev/null && echo "{} patched."' \;
	}
	ldcheck(){
		[ -n "$1" ] && d="$1" || d="."
		find "$d" -type f -exec bash -c 'echo -n "{} " ; patchelf --print-interpreter "{}"' \;
	}
	ldfix(){
		[ -n "$1" ] && d="$1" || d="."
		[ -n "$2" ] && ld="$2" || ld="$_p/lib/ld-2.26.so"
		find "$d" -type f -exec bash -c 'echo -n "{} " ; patchelf --set-interpreter '"$ld"' "{}"' \;
	}
	buildall-impl(){
		if [ -d "$_p" ] ; then
			echo ERROR: something is in the way
			return 1
		fi	
		( 
			export PATH=$_p:$PATH
			mkdir $_p &&
			log 'Copying kernel headers' kernelh-impl &&
			xpkg binutils-first gmp-first mpfr-first mpc-first isl-first zlib-first gcc-first || return 1

			# export -n LD_LIBRARY_PATH &&
			# xpkg glibc-first binutils gmp mpfr mpc isl gcc glibc
		) || return 1
	}
	xpkg(){
		[ -n "$1" ] &&
		mkdir -p $_r/$1 &&
		cd $_r/$1 &&
		fence &&
		log "Building $1" alter-impl "$@" &&
		shift &&
		xpkg "$@" || true
	}
	rebuildall(){
		fence && rebuildall-impl "$@"
	}
	rebuildall-impl (){
		 rm -rf $_p;
		 buildall "$@"
	}
reco
: eof
